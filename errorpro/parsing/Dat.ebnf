subformula_without_brackets = /[^=,\(\)\[\]<>\n\r']+/ ;
subformula = [ subformula_without_brackets ] "(" subformula ")" [ subformula ] | subformula_without_brackets ;
formula = subformula | "'" @:/[^']*/ "'" ;

variable_name = /[\w]+/;
longname = '"' @:/[^\"]+/ '"' | @:{ /[^,\[\]=\(\)\{\}<>\s]+/ /[\t ]+/ &/[^,\[\]=\(\)\{\}<>\s]+/ }+ ;
error = "<" @:formula ">";
unit = "[" @:formula "]";

assignment = [longname:longname] name:variable_name "=" value:formula [ error:error ] [ unit:unit ] ;

newline = ["\r\n" | "\n" | "\r"];
whitespace = { newline };

multi_assignment_spec = [longname:longname] name:variable_name [ error:error ] [ unit:unit ];
multi_assignment_header = @+:multi_assignment_spec { "," @+:multi_assignment_spec } newline;
multi_assignment_value = ?/[-/\w\.\*]+/?;
multi_assignment_row = { @+:multi_assignment_value }+ newline;
multi_assignment_rows = { @+:multi_assignment_row whitespace };
multi_assignment = "{" whitespace header:multi_assignment_header whitespace rows:multi_assignment_rows whitespace "}";

python_line = ">" @:/[^\n\r]*/;
python_code = ( code+:python_line { newline code+:python_line });

command = @:( assignment | multi_assignment | python_code ) (newline | $);
program = whitespace { @+:command whitespace } $;
